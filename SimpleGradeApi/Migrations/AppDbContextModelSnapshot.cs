// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleGradeApi.Data;

#nullable disable

namespace SimpleGradeApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleGrade.Base.Model.Base.BaseObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChangedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BaseObject");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseObject");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Connection.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChangedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClassGroupId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("SubjectGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassGroupId");

                    b.HasIndex("GradeId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SubjectGroupId");

                    b.HasIndex("TargetId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Person.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChangedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.ClassGroup", b =>
                {
                    b.HasBaseType("SimpleGrade.Base.Model.Base.BaseObject");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ClassGroup");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Grade", b =>
                {
                    b.HasBaseType("SimpleGrade.Base.Model.Base.BaseObject");

                    b.Property<int>("GradeType")
                        .HasColumnType("int");

                    b.Property<decimal>("RawValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Grade");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.SubjectGroup", b =>
                {
                    b.HasBaseType("SimpleGrade.Base.Model.Base.BaseObject");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("SubjectGroup");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Connection.Connection", b =>
                {
                    b.HasOne("SimpleGrade.Base.Model.ClassGroup", null)
                        .WithMany("Outgoing")
                        .HasForeignKey("ClassGroupId");

                    b.HasOne("SimpleGrade.Base.Model.Grade", null)
                        .WithMany("Outgoing")
                        .HasForeignKey("GradeId");

                    b.HasOne("SimpleGrade.Base.Model.Person.Person", null)
                        .WithMany("Outgoing")
                        .HasForeignKey("PersonId");

                    b.HasOne("SimpleGrade.Base.Model.SubjectGroup", null)
                        .WithMany("Outgoing")
                        .HasForeignKey("SubjectGroupId");

                    b.HasOne("SimpleGrade.Base.Model.Base.BaseObject", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Person.Person", b =>
                {
                    b.Navigation("Outgoing");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.ClassGroup", b =>
                {
                    b.Navigation("Outgoing");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.Grade", b =>
                {
                    b.Navigation("Outgoing");
                });

            modelBuilder.Entity("SimpleGrade.Base.Model.SubjectGroup", b =>
                {
                    b.Navigation("Outgoing");
                });
#pragma warning restore 612, 618
        }
    }
}
